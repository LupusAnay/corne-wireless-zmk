/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <160>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 32 33 34 35 6 7 8 9 10 11 18 19 20 21 22 23 39 40 41>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <160>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        /* Language-switch key:
         * Tap  – executes the macro above (host layout change + overlay toggle);
         * Hold – only toggles the overlay layer (to resync if needed). */

        lgui_sw: lgui_sw {
            compatible = "zmk,behavior-hold-tap";
            label = "LG_SW";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&tog>, <&lgui_tap>;
        };
    };

    macros {
        lgui_tap: lgui_tap {
            compatible = "zmk,behavior-macro-one-param";
            label = "LG_TAP";
            #binding-cells = <1>;
            bindings = <&kp LGUI &tog 4>;
        };

        // OV_TOG macro no longer required; hold action handles overlay toggle.
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | LBKT |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | RBKT |
            //                     | GUI | LWR | SPC |   | BSPC | RSE | ENT |

            display-name = "Base";
            bindings = <
&kp TAB     &kp Q                &kp W            &kp E              &kp R                &kp T        &kp Y          &kp U                 &kp I               &kp O             &kp P                    &kp LBKT
&kp ESCAPE  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_COMMAND F  &kp G        &kp H          &hmr RIGHT_COMMAND J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMI  &kp SQT
&kp LSHFT   &kp Z                &kp X            &kp C              &kp V                &kp B        &kp N          &kp M                 &kp COMMA           &kp DOT           &kp FSLH                 &kp RBKT
                                                  &lgui_sw 4 0       &mo 2                &kp SPACE    &kp BACKSPACE  &mo 1                 &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2    |  3   |  4   |  5   |   |  6   |  7   |  8   |  9   |  0   | BSPC  |
            // | TRNS | TRNS | PREV | PLAY | NEXT | PSCR |   | LFT  | DWN  |  UP  | RGT  | TRNS | TRNS  |
            // | SHFT | BT1  | BT2  | BT3  | BT4  | BT5  |   | TRNS | TRNS | TRNS | TRNS | TRNS | BTCLR |
            //                      | TRNS | TRNS | TRNS |   | TRNS | TRNS | TRNS |

            display-name = "Lower";
            bindings = <
&kp TAB    &kp N1        &kp N2          &kp N3            &kp N4        &kp N5             &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&trans     &trans        &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp PRINTSCREEN    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4       &tog 5    &trans    &trans  &trans     &trans  &bt BT_CLR
                                         &trans            &trans        &trans             &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // |  ;   |  :  |  '  |  "  |  `  |  ~  |   |  -  |  =  |  [  |  ]  |  {  |  }   |
            // |  ,   |  .  |  ?  |  /  |  <  |  >  |   |  _  |  +  |  |  |  \\  | TRNS | TRNS |
            //                     | TRNS | TRNS | TRNS |   | TRNS | TRNS | TRNS |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL   &kp AT        &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp SEMI   &kp COLON  &kp SQT       &kp DQT   &kp GRAVE  &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp LBRC  &kp RBRC
&kp COMMA  &kp DOT    &kp QUESTION  &kp FSLH  &kp LT     &kp GT       &kp UNDER  &kp PLUS   &kp PIPE      &kp BSLH  &trans    &trans
                                    &trans    &trans     &trans       &trans     &trans     &trans
            >;
        };

        /* Russian-layout symbol layer (index 3). */

        ru_raise_layer {
            display-name = "RU Raise";
            bindings = <
&kp TAB     &kp EXCL    &kp N2      &kp N3      &kp N4     &kp N5       &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LS(N4)  &kp LS(N6)  &kp SEMI    &kp LS(N2)  &kp GRAVE  &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp LBRC  &kp RBRC
&kp COMMA   &kp DOT     &kp LS(N7)  &kp FSLH    &kp LT     &kp GT       &kp UNDER  &kp PLUS   &kp PIPE      &kp BSLH  &trans    &trans
                                    &trans      &trans     &trans       &trans     &trans     &trans
            >;
        };

        /* Overlay layer that only changes the behaviour of the thumb "Raise"
         * key to momentarily activate the Russian symbol layer. All other
         * positions are transparent so they fall through to underlying layers. */

        ru_overlay_layer {
            display-name = "RU Overlay";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &mo 3   &trans    &trans  &trans  &trans
            >;
        };

        cs {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5      &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp T   &kp Q   &kp W     &kp E     &kp R       &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp B   &kp A   &kp S     &kp D     &kp F       &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &kp LEFT  &kp BSPC    &trans  &trans  &trans
            >;
        };
    };
};
